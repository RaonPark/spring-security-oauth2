spring:
  thymeleaf:
    prefix: classpath:/template/
  security:
    oauth2:
      client:
        registration:
          keycloak1:
            client-id: oauth2-client-app
            client-secret: P7441YD2ns92oL4GVtkvOoyBRwOEjA0e
            client-name: oauth2-client-app
            redirect-uri: http://localhost:8080/login/oauth2/code/keycloak
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_basic
            scope:
              - openid
              - profile
            provider: keycloak

          keycloakWithPKCE:
            client-id: oauth2-client-app2
            client-secret: 33znvIdLQWgbRSFKZ80YdRTmCHcpzIh4
            client-name: oauth2-client-app2
            redirect-uri: http://localhost:8080/login/oauth2/code/keycloak
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_basic # default 이어야 PKCE 방식이 통한.
            scope:
              - openid
              - profile
            provider: keycloak

          keycloak2:
            client-id: oauth2-client-app3
            client-secret: P7441YD2ns92oL4GVtkvOoyBRwOEjA0e
            client-name: oauth2-client-app3
            redirect-uri: http://localhost:8080/home
            authorization-grant-type: implicit
            client-authentication-method: none
            scope:
              - openid
              - profile
            provider: keycloak

        provider:
          keycloak:
            authorization-uri: http://localhost:8081/realms/oauth2/protocol/openid-connect/auth
            token-uri: http://localhost:8081/realms/oauth2/protocol/openid-connect/token
            issuer-uri: http://localhost:8081/realms/oauth2
            user-info-uri: http://localhost:8081/realms/oauth2/protocol/openid-connect/userinfo
            jwk-set-uri: http://localhost:8081/realms/oauth2/protocol/openid-connect/certs
            user-name-attribute: preferred_username